#!/bin/sh

set -eu
{
OWNER="j5pu"
REPO="bbin"
HOMEBREW_BREW_GIT_REMOTE="https://github.com/${OWNER}/${REPO}"

#######################################
# check if current working directory exists and exit if not
# Globals
#   CWD
# Arguments:
#   None
#######################################
cwd() {
  CWD="$(pwd -P)"
  test -d "${CWD}" || die "Current working directory does not exist: $(pwd -P)"
}

#######################################
# check if dependencies are met for Homebrew
# Arguments:
#   None
#######################################
dependencies_met() {
  command -v git >/dev/null 2>&1
  command -v curl >/dev/null 2>&1
  command -v jq >/dev/null 2>&1
}

#######################################
# die with return or exit
# Globals:
#   RETURN
# Arguments:
#   None
#######################################
die() {
  rc=$?
  >&2 printf '%b\n' "\033[1;31mâœ˜\033[0m ${REPO}: $*"
  "${RETURN:-exit}" $rc
}

#######################################
# show usage
# Arguments:
#   1
#######################################
help() {
  rc=$?
  [ ! "${1-}" ] || { RETURN="return" die "$1" ; echo; rc=1; }
  >&2 cat <<EOF
usage: ${REPO} [command] [option]
   or: ${REPO} prefix
   or: ${REPO} prefix  --development

system or development ${REPO} repository installer

System install is done by default unless "--development" is specified, /etc/profile is updated with \$HOMEBREW_PREFIX.

Homebrew is not updated if requirements are not met on the system, unless specified with "--with-homebrew".

Homebrew default installation directories are used when no stdin (i.e. <cat|curl> [https://.../]install | sh -s ),
unless "--development" is used (cwd), otherwise downloaded path is used.

"--passwd" is ignored when "--development" is used.

Options:
   --development            installs as development repository, .env is created with variables in Globals section
   --password=<password>    sudo password to update sudoers and \$PASSWORD in etc/profile.d/password.sh
   --with-homebrew          install requirements for homebrew

Commands:
   prefix                   show prefix (top path of the repository or installation directory) and exit
   -h, --help, help         display this help and exit.

Globals:
   HOMEBREW_DEVELOPER       prefix to install generated or temporary files, i.e.: casks app dir
   HOMEBREW_PREFIX          top path of the repository

Exit Code:
   1   installation in a temp directory, under a git repository or cwd does not exist

Examples:
   $ git clone --depth 1
EOF

  exit $rc
}

prefix() {
:
}

main() {
  development=false; prefix=false; shellenv=false; with_homebrew=false

  for arg; do
    case "${arg}" in
      -h|--help|help) help; return ;;
      --development) development=true ;;
      --password=*) password="${arg#*=}" ;;
      --with-homebrew) with_homebrew=true ;;
      prefix) prefix=true ;;
      shellenv) shellenv=true: ;;
      *) help "${arg}: invalid command/option" ;;
    esac
  done

  prefix

}

cwd
case "${0##*/}" in
  -ash|ash|-bash|bash|-busybox|busybox|-dash|dash|-ksh|ksh|-sh|sh|-zsh|zsh)
    local=false
    prefix="${CWD}"
    #
    ;;
  *)
    local=true
    bin="$(cd "$(dirname "$0")"; pwd -P)"
    PATH="${bin}:${PATH}"
    prefix="$(dirname "${bin}")"
    #
    ;;
esac

main "$@"
}

